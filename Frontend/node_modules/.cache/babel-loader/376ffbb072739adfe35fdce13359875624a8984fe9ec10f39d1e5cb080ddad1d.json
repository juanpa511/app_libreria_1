{"ast":null,"code":"import { getAllLoans as fetchAllLoans } from './apiService';\nconst loanService = {\n  // Obtener préstamos del usuario actual\n  getMyLoans: async () => {\n    try {\n      const response = await api.get('/loans/my-loans');\n      return response.data;\n    } catch (error) {\n      throw new Error('Error al obtener mis préstamos: ' + error.message);\n    }\n  },\n  // Obtener todos los préstamos (Admin)\n  getAllLoans: async () => {\n    try {\n      const response = await fetchAllLoans();\n      return response;\n    } catch (error) {\n      throw new Error('Error al obtener préstamos: ' + error.message);\n    }\n  },\n  // Crear nuevo préstamo (Admin)\n  createLoan: async loanData => {\n    try {\n      const response = await api.post('/loans', loanData);\n      return response.data;\n    } catch (error) {\n      throw new Error('Error al crear préstamo: ' + error.message);\n    }\n  },\n  // Devolver libro\n  returnBook: async loanId => {\n    try {\n      const response = await api.put(`/loans/${loanId}/return`);\n      return response.data;\n    } catch (error) {\n      throw new Error('Error al devolver libro: ' + error.message);\n    }\n  },\n  // Renovar préstamo\n  renewLoan: async loanId => {\n    try {\n      const response = await api.put(`/loans/${loanId}/renew`);\n      return response.data;\n    } catch (error) {\n      throw new Error('Error al renovar préstamo: ' + error.message);\n    }\n  },\n  // Obtener préstamos por usuario (Admin)\n  getLoansByUser: async userId => {\n    try {\n      const response = await api.get(`/loans/user/${userId}`);\n      return response.data;\n    } catch (error) {\n      throw new Error('Error al obtener préstamos del usuario: ' + error.message);\n    }\n  },\n  // Obtener préstamos vencidos\n  getOverdueLoans: async () => {\n    try {\n      const response = await api.get('/loans/overdue');\n      return response.data;\n    } catch (error) {\n      throw new Error('Error al obtener préstamos vencidos: ' + error.message);\n    }\n  }\n};\nexport default loanService;","map":{"version":3,"names":["getAllLoans","fetchAllLoans","loanService","getMyLoans","response","api","get","data","error","Error","message","createLoan","loanData","post","returnBook","loanId","put","renewLoan","getLoansByUser","userId","getOverdueLoans"],"sources":["C:/Users/jpval/OneDrive/Desktop/jp/aplicaciones web/app_libreria_1/Frontend/src/services/loanService.js"],"sourcesContent":["import { getAllLoans as fetchAllLoans } from './apiService';\r\n\r\nconst loanService = {\r\n  // Obtener préstamos del usuario actual\r\n  getMyLoans: async () => {\r\n    try {\r\n      const response = await api.get('/loans/my-loans');\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error('Error al obtener mis préstamos: ' + error.message);\r\n    }\r\n  },\r\n\r\n  // Obtener todos los préstamos (Admin)\r\n  getAllLoans: async () => {\r\n    try {\r\n      const response = await fetchAllLoans();\r\n      return response;\r\n    } catch (error) {\r\n      throw new Error('Error al obtener préstamos: ' + error.message);\r\n    }\r\n  },\r\n\r\n  // Crear nuevo préstamo (Admin)\r\n  createLoan: async (loanData) => {\r\n    try {\r\n      const response = await api.post('/loans', loanData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error('Error al crear préstamo: ' + error.message);\r\n    }\r\n  },\r\n\r\n  // Devolver libro\r\n  returnBook: async (loanId) => {\r\n    try {\r\n      const response = await api.put(`/loans/${loanId}/return`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error('Error al devolver libro: ' + error.message);\r\n    }\r\n  },\r\n\r\n  // Renovar préstamo\r\n  renewLoan: async (loanId) => {\r\n    try {\r\n      const response = await api.put(`/loans/${loanId}/renew`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error('Error al renovar préstamo: ' + error.message);\r\n    }\r\n  },\r\n\r\n  // Obtener préstamos por usuario (Admin)\r\n  getLoansByUser: async (userId) => {\r\n    try {\r\n      const response = await api.get(`/loans/user/${userId}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error('Error al obtener préstamos del usuario: ' + error.message);\r\n    }\r\n  },\r\n\r\n  // Obtener préstamos vencidos\r\n  getOverdueLoans: async () => {\r\n    try {\r\n      const response = await api.get('/loans/overdue');\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error('Error al obtener préstamos vencidos: ' + error.message);\r\n    }\r\n  }\r\n};\r\n\r\nexport default loanService;"],"mappings":"AAAA,SAASA,WAAW,IAAIC,aAAa,QAAQ,cAAc;AAE3D,MAAMC,WAAW,GAAG;EAClB;EACAC,UAAU,EAAE,MAAAA,CAAA,KAAY;IACtB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,GAAG,CAACC,GAAG,CAAC,iBAAiB,CAAC;MACjD,OAAOF,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,kCAAkC,GAAGD,KAAK,CAACE,OAAO,CAAC;IACrE;EACF,CAAC;EAED;EACAV,WAAW,EAAE,MAAAA,CAAA,KAAY;IACvB,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMH,aAAa,CAAC,CAAC;MACtC,OAAOG,QAAQ;IACjB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,8BAA8B,GAAGD,KAAK,CAACE,OAAO,CAAC;IACjE;EACF,CAAC;EAED;EACAC,UAAU,EAAE,MAAOC,QAAQ,IAAK;IAC9B,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAMC,GAAG,CAACQ,IAAI,CAAC,QAAQ,EAAED,QAAQ,CAAC;MACnD,OAAOR,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,2BAA2B,GAAGD,KAAK,CAACE,OAAO,CAAC;IAC9D;EACF,CAAC;EAED;EACAI,UAAU,EAAE,MAAOC,MAAM,IAAK;IAC5B,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMC,GAAG,CAACW,GAAG,CAAC,UAAUD,MAAM,SAAS,CAAC;MACzD,OAAOX,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,2BAA2B,GAAGD,KAAK,CAACE,OAAO,CAAC;IAC9D;EACF,CAAC;EAED;EACAO,SAAS,EAAE,MAAOF,MAAM,IAAK;IAC3B,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMC,GAAG,CAACW,GAAG,CAAC,UAAUD,MAAM,QAAQ,CAAC;MACxD,OAAOX,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,GAAGD,KAAK,CAACE,OAAO,CAAC;IAChE;EACF,CAAC;EAED;EACAQ,cAAc,EAAE,MAAOC,MAAM,IAAK;IAChC,IAAI;MACF,MAAMf,QAAQ,GAAG,MAAMC,GAAG,CAACC,GAAG,CAAC,eAAea,MAAM,EAAE,CAAC;MACvD,OAAOf,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,0CAA0C,GAAGD,KAAK,CAACE,OAAO,CAAC;IAC7E;EACF,CAAC;EAED;EACAU,eAAe,EAAE,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACF,MAAMhB,QAAQ,GAAG,MAAMC,GAAG,CAACC,GAAG,CAAC,gBAAgB,CAAC;MAChD,OAAOF,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,uCAAuC,GAAGD,KAAK,CAACE,OAAO,CAAC;IAC1E;EACF;AACF,CAAC;AAED,eAAeR,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}