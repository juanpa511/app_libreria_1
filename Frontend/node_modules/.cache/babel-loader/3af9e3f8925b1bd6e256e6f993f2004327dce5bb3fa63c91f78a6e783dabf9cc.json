{"ast":null,"code":"// src/services/apiService.js\n\nconst API_BASE_URL = 'http://localhost:8087/api';\n\n// Función helper para hacer peticiones fetch\nconst makeRequest = async (url, options = {}) => {\n  const defaultOptions = {\n    mode: 'cors',\n    credentials: 'include',\n    headers: getAuthHeaders(),\n    ...options\n  };\n  return await fetch(url, defaultOptions);\n};\n\n// Función para obtener el token del localStorage\nconst getToken = () => {\n  return localStorage.getItem('token');\n};\n\n// Función para obtener headers con autenticación\nconst getAuthHeaders = () => {\n  const token = getToken();\n  return {\n    'Content-Type': 'application/json',\n    ...(token && {\n      'Authorization': `Bearer ${token}`\n    })\n  };\n};\n\n// Función para manejar respuestas de la API\nconst handleResponse = async response => {\n  console.log('=== HANDLE RESPONSE DEBUG ===');\n  console.log('Response ok:', response.ok);\n  console.log('Response status:', response.status);\n  if (!response.ok) {\n    const errorText = await response.text();\n    console.log('Error text:', errorText);\n    let errorMessage = 'Error en la solicitud';\n    try {\n      const errorData = JSON.parse(errorText);\n      errorMessage = errorData.message || errorData.error || errorMessage;\n    } catch {\n      errorMessage = errorText || errorMessage;\n    }\n    console.log('Final error message:', errorMessage);\n    throw new Error(errorMessage);\n  }\n  const contentType = response.headers.get('content-type');\n  console.log('Content-Type:', contentType);\n  if (contentType && contentType.includes('application/json')) {\n    const jsonData = await response.json();\n    console.log('JSON response:', jsonData);\n    return jsonData;\n  }\n  const textData = await response.text();\n  console.log('Text response:', textData);\n  return textData;\n};\n\n// ==================== AUTENTICACIÓN ====================\n\nexport const loginUser = async credentials => {\n  try {\n    const response = await makeRequest(`${API_BASE_URL}/auth/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    });\n    const data = await handleResponse(response);\n\n    // Guardar token y datos del usuario\n    if (data.token) {\n      const userData = {\n        email: data.email || credentials.email,\n        role: data.rolId || 2,\n        // El backend envía rolId, no role\n        roleId: parseInt(data.rolId) || 2\n      };\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('user', JSON.stringify(userData));\n    }\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const registerUser = async userData => {\n  try {\n    const response = await makeRequest(`${API_BASE_URL}/auth/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    });\n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('user');\n};\nexport const isAuthenticated = () => {\n  const token = getToken();\n  return !!token;\n};\nexport const getUserRole = () => {\n  const user = localStorage.getItem('user');\n  if (user) {\n    const userData = JSON.parse(user);\n    return userData.role || userData.roleId || 2;\n  }\n  return 2; // Valor por defecto: Lector\n};\nexport const getUserEmail = () => {\n  const user = localStorage.getItem('user');\n  if (user) {\n    const userData = JSON.parse(user);\n    return userData.email;\n  }\n  return null;\n};\n\n// ==================== LIBROS ====================\n\nexport const getAllBooks = async () => {\n  try {\n    const response = await makeRequest(`${API_BASE_URL}/book/all`);\n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\nexport const getBooksByType = async type => {\n  try {\n    const response = await makeRequest(`${API_BASE_URL}/book/all/${type}`);\n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\nexport const createBook = async bookData => {\n  try {\n    console.log('=== API SERVICE DEBUG ===');\n    console.log('URL:', `${API_BASE_URL}/book/new`);\n    console.log('Headers:', getAuthHeaders());\n    console.log('Data:', bookData);\n    const response = await makeRequest(`${API_BASE_URL}/book/new`, {\n      method: 'POST',\n      body: JSON.stringify(bookData)\n    });\n    console.log('Response status:', response.status);\n    console.log('Response headers:', response.headers);\n    return await handleResponse(response);\n  } catch (error) {\n    console.error('API Service error:', error);\n    throw error;\n  }\n};\nexport const findBookByTitle = async title => {\n  try {\n    const response = await makeRequest(`${API_BASE_URL}/book/find/${encodeURIComponent(title)}`);\n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\nexport const createBookCopy = async copyData => {\n  try {\n    const response = await makeRequest(`${API_BASE_URL}/book/newcopy`, {\n      method: 'POST',\n      body: JSON.stringify(copyData)\n    });\n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\nexport const getAvailableCopies = async title => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/book/copy/${encodeURIComponent(title)}`, {\n      headers: getAuthHeaders()\n    });\n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\n\n// ==================== PRÉSTAMOS ====================\n\nexport const createBooking = async bookingData => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/booking/new`, {\n      method: 'POST',\n      headers: getAuthHeaders(),\n      body: JSON.stringify(bookingData)\n    });\n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\nexport const getBookingsByEmail = async email => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/booking/find/${encodeURIComponent(email)}`, {\n      headers: getAuthHeaders()\n    });\n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\nexport const returnBook = async (bookingId, returnData) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/booking/return/${bookingId}`, {\n      method: 'POST',\n      headers: getAuthHeaders(),\n      body: JSON.stringify(returnData)\n    });\n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\n\n// ==================== LECTORES ====================\n\nexport const findReaderByEmail = async email => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/reader/find/${encodeURIComponent(email)}`, {\n      headers: getAuthHeaders()\n    });\n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\nexport const updateReaderState = async (email, stateData) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/reader/state/${encodeURIComponent(email)}`, {\n      method: 'POST',\n      headers: getAuthHeaders(),\n      body: JSON.stringify(stateData)\n    });\n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\n\n// ==================== MULTAS ====================\n\nexport const getFinesByEmail = async email => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/fine/find/${encodeURIComponent(email)}`, {\n      headers: getAuthHeaders()\n    });\n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\nexport default {\n  // Auth\n  loginUser,\n  registerUser,\n  logout,\n  isAuthenticated,\n  getUserRole,\n  getUserEmail,\n  // Books\n  getAllBooks,\n  getBooksByType,\n  createBook,\n  findBookByTitle,\n  createBookCopy,\n  getAvailableCopies,\n  // Bookings\n  createBooking,\n  getBookingsByEmail,\n  returnBook,\n  // Readers\n  findReaderByEmail,\n  updateReaderState,\n  // Fines\n  getFinesByEmail\n};","map":{"version":3,"names":["API_BASE_URL","makeRequest","url","options","defaultOptions","mode","credentials","headers","getAuthHeaders","fetch","getToken","localStorage","getItem","token","handleResponse","response","console","log","ok","status","errorText","text","errorMessage","errorData","JSON","parse","message","error","Error","contentType","get","includes","jsonData","json","textData","loginUser","method","body","stringify","data","userData","email","role","rolId","roleId","parseInt","setItem","registerUser","logout","removeItem","isAuthenticated","getUserRole","user","getUserEmail","getAllBooks","getBooksByType","type","createBook","bookData","findBookByTitle","title","encodeURIComponent","createBookCopy","copyData","getAvailableCopies","createBooking","bookingData","getBookingsByEmail","returnBook","bookingId","returnData","findReaderByEmail","updateReaderState","stateData","getFinesByEmail"],"sources":["C:/Users/jpval/OneDrive/Desktop/jp/aplicaciones web/app_libreria_1/Frontend/src/services/apiService.js"],"sourcesContent":["// src/services/apiService.js\n\nconst API_BASE_URL = 'http://localhost:8087/api';\n\n// Función helper para hacer peticiones fetch\nconst makeRequest = async (url, options = {}) => {\n  const defaultOptions = {\n    mode: 'cors',\n    credentials: 'include',\n    headers: getAuthHeaders(),\n    ...options\n  };\n  \n  return await fetch(url, defaultOptions);\n};\n\n// Función para obtener el token del localStorage\nconst getToken = () => {\n  return localStorage.getItem('token');\n};\n\n// Función para obtener headers con autenticación\nconst getAuthHeaders = () => {\n  const token = getToken();\n  return {\n    'Content-Type': 'application/json',\n    ...(token && { 'Authorization': `Bearer ${token}` })\n  };\n};\n\n// Función para manejar respuestas de la API\nconst handleResponse = async (response) => {\n  console.log('=== HANDLE RESPONSE DEBUG ===');\n  console.log('Response ok:', response.ok);\n  console.log('Response status:', response.status);\n  \n  if (!response.ok) {\n    const errorText = await response.text();\n    console.log('Error text:', errorText);\n    let errorMessage = 'Error en la solicitud';\n    \n    try {\n      const errorData = JSON.parse(errorText);\n      errorMessage = errorData.message || errorData.error || errorMessage;\n    } catch {\n      errorMessage = errorText || errorMessage;\n    }\n    \n    console.log('Final error message:', errorMessage);\n    throw new Error(errorMessage);\n  }\n  \n  const contentType = response.headers.get('content-type');\n  console.log('Content-Type:', contentType);\n  \n  if (contentType && contentType.includes('application/json')) {\n    const jsonData = await response.json();\n    console.log('JSON response:', jsonData);\n    return jsonData;\n  }\n  \n  const textData = await response.text();\n  console.log('Text response:', textData);\n  return textData;\n};\n\n// ==================== AUTENTICACIÓN ====================\n\nexport const loginUser = async (credentials) => {\n  try {\n    const response = await makeRequest(`${API_BASE_URL}/auth/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(credentials),\n    });\n\n    const data = await handleResponse(response);\n    \n    // Guardar token y datos del usuario\n    if (data.token) {\n      const userData = {\n        email: data.email || credentials.email,\n        role: data.rolId || 2, // El backend envía rolId, no role\n        roleId: parseInt(data.rolId) || 2\n      };\n      \n      localStorage.setItem('token', data.token);\n      localStorage.setItem('user', JSON.stringify(userData));\n    }\n    \n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const registerUser = async (userData) => {\n  try {\n    const response = await makeRequest(`${API_BASE_URL}/auth/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(userData),\n    });\n\n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('user');\n};\n\nexport const isAuthenticated = () => {\n  const token = getToken();\n  return !!token;\n};\n\nexport const getUserRole = () => {\n  const user = localStorage.getItem('user');\n  if (user) {\n    const userData = JSON.parse(user);\n    return userData.role || userData.roleId || 2;\n  }\n  return 2; // Valor por defecto: Lector\n};\n\nexport const getUserEmail = () => {\n  const user = localStorage.getItem('user');\n  if (user) {\n    const userData = JSON.parse(user);\n    return userData.email;\n  }\n  return null;\n};\n\n// ==================== LIBROS ====================\n\nexport const getAllBooks = async () => {\n  try {\n    const response = await makeRequest(`${API_BASE_URL}/book/all`);\n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getBooksByType = async (type) => {\n  try {\n    const response = await makeRequest(`${API_BASE_URL}/book/all/${type}`);\n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const createBook = async (bookData) => {\n  try {\n    console.log('=== API SERVICE DEBUG ===');\n    console.log('URL:', `${API_BASE_URL}/book/new`);\n    console.log('Headers:', getAuthHeaders());\n    console.log('Data:', bookData);\n    \n    const response = await makeRequest(`${API_BASE_URL}/book/new`, {\n      method: 'POST',\n      body: JSON.stringify(bookData),\n    });\n    \n    console.log('Response status:', response.status);\n    console.log('Response headers:', response.headers);\n    \n    return await handleResponse(response);\n  } catch (error) {\n    console.error('API Service error:', error);\n    throw error;\n  }\n};\n\nexport const findBookByTitle = async (title) => {\n  try {\n    const response = await makeRequest(`${API_BASE_URL}/book/find/${encodeURIComponent(title)}`);\n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const createBookCopy = async (copyData) => {\n  try {\n    const response = await makeRequest(`${API_BASE_URL}/book/newcopy`, {\n      method: 'POST',\n      body: JSON.stringify(copyData),\n    });\n    \n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getAvailableCopies = async (title) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/book/copy/${encodeURIComponent(title)}`, {\n      headers: getAuthHeaders(),\n    });\n    \n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\n\n// ==================== PRÉSTAMOS ====================\n\nexport const createBooking = async (bookingData) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/booking/new`, {\n      method: 'POST',\n      headers: getAuthHeaders(),\n      body: JSON.stringify(bookingData),\n    });\n    \n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getBookingsByEmail = async (email) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/booking/find/${encodeURIComponent(email)}`, {\n      headers: getAuthHeaders(),\n    });\n    \n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const returnBook = async (bookingId, returnData) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/booking/return/${bookingId}`, {\n      method: 'POST',\n      headers: getAuthHeaders(),\n      body: JSON.stringify(returnData),\n    });\n    \n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\n\n// ==================== LECTORES ====================\n\nexport const findReaderByEmail = async (email) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/reader/find/${encodeURIComponent(email)}`, {\n      headers: getAuthHeaders(),\n    });\n    \n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const updateReaderState = async (email, stateData) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/reader/state/${encodeURIComponent(email)}`, {\n      method: 'POST',\n      headers: getAuthHeaders(),\n      body: JSON.stringify(stateData),\n    });\n    \n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\n\n// ==================== MULTAS ====================\n\nexport const getFinesByEmail = async (email) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/fine/find/${encodeURIComponent(email)}`, {\n      headers: getAuthHeaders(),\n    });\n    \n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport default {\n  // Auth\n  loginUser,\n  registerUser,\n  logout,\n  isAuthenticated,\n  getUserRole,\n  getUserEmail,\n  \n  // Books\n  getAllBooks,\n  getBooksByType,\n  createBook,\n  findBookByTitle,\n  createBookCopy,\n  getAvailableCopies,\n  \n  // Bookings\n  createBooking,\n  getBookingsByEmail,\n  returnBook,\n  \n  // Readers\n  findReaderByEmail,\n  updateReaderState,\n  \n  // Fines\n  getFinesByEmail\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}