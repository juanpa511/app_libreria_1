{"ast":null,"code":"import apiService from './apiService';\nconst loanService = {\n  // Obtener préstamos del usuario actual\n  getMyLoans: async () => {\n    try {\n      const userEmail = apiService.getUserEmail();\n      if (!userEmail) {\n        throw new Error('Usuario no autenticado');\n      }\n      const response = await apiService.getBookingsByEmail(userEmail);\n      return response;\n    } catch (error) {\n      throw new Error('Error al obtener mis préstamos: ' + error.message);\n    }\n  },\n  // Obtener todos los préstamos (Admin)\n  getAllLoans: async () => {\n    try {\n      const response = await apiService.getAllLoans();\n      return response;\n    } catch (error) {\n      throw new Error('Error al obtener préstamos: ' + error.message);\n    }\n  },\n  // Crear nuevo préstamo (Admin)\n  createLoan: async loanData => {\n    try {\n      const response = await apiService.createBooking(loanData);\n      return response;\n    } catch (error) {\n      throw new Error('Error al crear préstamo: ' + error.message);\n    }\n  },\n  // Devolver libro\n  returnLoan: async bookingId => {\n    try {\n      const userEmail = apiService.getUserEmail();\n      if (!userEmail) {\n        throw new Error('Usuario no autenticado');\n      }\n      const returnData = {\n        idBooking: bookingId\n      };\n      const response = await apiService.returnBook(userEmail, returnData);\n      return response;\n    } catch (error) {\n      throw new Error('Error al devolver libro: ' + error.message);\n    }\n  },\n  // Renovar préstamo\n  renewLoan: async loanId => {\n    try {\n      const response = await apiService.renewBooking(loanId);\n      return response;\n    } catch (error) {\n      throw new Error('Error al renovar préstamo: ' + error.message);\n    }\n  },\n  // Cancelar préstamo\n  cancelLoan: async loanId => {\n    try {\n      const response = await apiService.cancelBooking(loanId);\n      return response;\n    } catch (error) {\n      throw new Error('Error al cancelar préstamo: ' + error.message);\n    }\n  },\n  // Obtener préstamos por usuario (Admin)\n  getLoansByUser: async userEmail => {\n    try {\n      const response = await apiService.getBookingsByEmail(userEmail);\n      return response;\n    } catch (error) {\n      throw new Error('Error al obtener préstamos del usuario: ' + error.message);\n    }\n  },\n  // Obtener préstamos vencidos (filtrar en frontend)\n  getOverdueLoans: async () => {\n    try {\n      const allLoans = await apiService.getAllLoans();\n      const now = new Date();\n      return allLoans.filter(loan => loan.state && new Date(loan.dateReturn) < now);\n    } catch (error) {\n      throw new Error('Error al obtener préstamos vencidos: ' + error.message);\n    }\n  }\n};\nexport default loanService;","map":{"version":3,"names":["apiService","loanService","getMyLoans","userEmail","getUserEmail","Error","response","getBookingsByEmail","error","message","getAllLoans","createLoan","loanData","createBooking","returnLoan","bookingId","returnData","idBooking","returnBook","renewLoan","loanId","renewBooking","cancelLoan","cancelBooking","getLoansByUser","getOverdueLoans","allLoans","now","Date","filter","loan","state","dateReturn"],"sources":["C:/Users/jpval/OneDrive/Desktop/jp/aplicaciones web/app_libreria_1/Frontend/src/services/loanService.js"],"sourcesContent":["import apiService from './apiService';\r\n\r\nconst loanService = {\r\n  // Obtener préstamos del usuario actual\r\n  getMyLoans: async () => {\r\n    try {\r\n      const userEmail = apiService.getUserEmail();\r\n      if (!userEmail) {\r\n        throw new Error('Usuario no autenticado');\r\n      }\r\n      const response = await apiService.getBookingsByEmail(userEmail);\r\n      return response;\r\n    } catch (error) {\r\n      throw new Error('Error al obtener mis préstamos: ' + error.message);\r\n    }\r\n  },\r\n\r\n  // Obtener todos los préstamos (Admin)\r\n  getAllLoans: async () => {\r\n    try {\r\n      const response = await apiService.getAllLoans();\r\n      return response;\r\n    } catch (error) {\r\n      throw new Error('Error al obtener préstamos: ' + error.message);\r\n    }\r\n  },\r\n\r\n  // Crear nuevo préstamo (Admin)\r\n  createLoan: async (loanData) => {\r\n    try {\r\n      const response = await apiService.createBooking(loanData);\r\n      return response;\r\n    } catch (error) {\r\n      throw new Error('Error al crear préstamo: ' + error.message);\r\n    }\r\n  },\r\n\r\n  // Devolver libro\r\n  returnLoan: async (bookingId) => {\r\n    try {\r\n      const userEmail = apiService.getUserEmail();\r\n      if (!userEmail) {\r\n        throw new Error('Usuario no autenticado');\r\n      }\r\n      const returnData = { idBooking: bookingId };\r\n      const response = await apiService.returnBook(userEmail, returnData);\r\n      return response;\r\n    } catch (error) {\r\n      throw new Error('Error al devolver libro: ' + error.message);\r\n    }\r\n  },\r\n\r\n  // Renovar préstamo\r\n  renewLoan: async (loanId) => {\r\n    try {\r\n      const response = await apiService.renewBooking(loanId);\r\n      return response;\r\n    } catch (error) {\r\n      throw new Error('Error al renovar préstamo: ' + error.message);\r\n    }\r\n  },\r\n\r\n  // Cancelar préstamo\r\n  cancelLoan: async (loanId) => {\r\n    try {\r\n      const response = await apiService.cancelBooking(loanId);\r\n      return response;\r\n    } catch (error) {\r\n      throw new Error('Error al cancelar préstamo: ' + error.message);\r\n    }\r\n  },\r\n\r\n  // Obtener préstamos por usuario (Admin)\r\n  getLoansByUser: async (userEmail) => {\r\n    try {\r\n      const response = await apiService.getBookingsByEmail(userEmail);\r\n      return response;\r\n    } catch (error) {\r\n      throw new Error('Error al obtener préstamos del usuario: ' + error.message);\r\n    }\r\n  },\r\n\r\n  // Obtener préstamos vencidos (filtrar en frontend)\r\n  getOverdueLoans: async () => {\r\n    try {\r\n      const allLoans = await apiService.getAllLoans();\r\n      const now = new Date();\r\n      return allLoans.filter(loan => \r\n        loan.state && new Date(loan.dateReturn) < now\r\n      );\r\n    } catch (error) {\r\n      throw new Error('Error al obtener préstamos vencidos: ' + error.message);\r\n    }\r\n  }\r\n};\r\n\r\nexport default loanService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}