{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jp.maldonado\\\\Desktop\\\\Universidad\\\\Aplicaciones web\\\\app_libreria\\\\Frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect, useState } from 'react';\nimport { authService } from '../services/authService';\n\n// Estado inicial\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  user: null,\n  token: null,\n  isAuthenticated: false,\n  loading: true,\n  error: null\n};\n\n// Tipos de acciones\nconst AUTH_ACTIONS = {\n  LOGIN_START: 'LOGIN_START',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_ERROR: 'LOGIN_ERROR',\n  LOGOUT: 'LOGOUT',\n  REGISTER_START: 'REGISTER_START',\n  REGISTER_SUCCESS: 'REGISTER_SUCCESS',\n  REGISTER_ERROR: 'REGISTER_ERROR',\n  LOAD_USER: 'LOAD_USER',\n  CLEAR_ERROR: 'CLEAR_ERROR'\n};\n\n// Reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.LOGIN_START:\n    case AUTH_ACTIONS.REGISTER_START:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n    case AUTH_ACTIONS.REGISTER_SUCCESS:\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        loading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGIN_ERROR:\n    case AUTH_ACTIONS.REGISTER_ERROR:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        error: action.payload\n      };\n    case AUTH_ACTIONS.LOGOUT:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.LOAD_USER:\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        loading: false\n      };\n    case AUTH_ACTIONS.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\n\n// Crear contexto\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Hook personalizado para usar el contexto\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth debe ser usado dentro de un AuthProvider');\n  }\n  return context;\n};\n\n// Provider\n//export const AuthProvider = ({ children }) => {\n//  const [state, dispatch] = useReducer(authReducer, initialState);\n\n// Cargar usuario al iniciar la aplicación\n// useEffect(() => {\n//   const loadUser = async () => {\n//     try {\n//       const token = localStorage.getItem('token');\n//       const userData = localStorage.getItem('user');\n//       \n//       if (token && userData) {\n//         const user = JSON.parse(userData);\n//         dispatch({\n//           type: AUTH_ACTIONS.LOAD_USER,\n//           payload: { user, token }\n//         });\n//       } else {\n//         dispatch({ type: AUTH_ACTIONS.LOGOUT });\n//       }\n//     } catch (error) {\n//       console.error('Error al cargar usuario:', error);\n//       dispatch({ type: AUTH_ACTIONS.LOGOUT });\n//     }\n//   };\n//\n//   loadUser();\n// }, []);\n//\n// Función de login\n// const login = async (email, password) => {\n//   try {\n//     dispatch({ type: AUTH_ACTIONS.LOGIN_START });\n//     \n//     const response = await authService.login(email, password);\n//     const { user, token } = response.data;\n//     \n//     // Guardar en localStorage\n//     localStorage.setItem('token', token);\n//     localStorage.setItem('user', JSON.stringify(user));\n//     \n//     dispatch({\n//       type: AUTH_ACTIONS.LOGIN_SUCCESS,\n//       payload: { user, token }\n//     });\n//     \n//     return { success: true };\n//   } catch (error) {\n//     const errorMessage = error.response?.data?.message || 'Error al iniciar sesión';\n//     dispatch({\n//       type: AUTH_ACTIONS.LOGIN_ERROR,\n//       payload: errorMessage\n//     });\n//     return { success: false, error: errorMessage };\n//   }\n// };\n\n// Función de registro\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst register = async userData => {\n  try {\n    dispatch({\n      type: AUTH_ACTIONS.REGISTER_START\n    });\n    const response = await authService.register(userData);\n    const {\n      user,\n      token\n    } = response.data;\n\n    // Guardar en localStorage\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    dispatch({\n      type: AUTH_ACTIONS.REGISTER_SUCCESS,\n      payload: {\n        user,\n        token\n      }\n    });\n    return {\n      success: true\n    };\n  } catch (error) {\n    var _error$response, _error$response$data;\n    const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Error al registrarse';\n    dispatch({\n      type: AUTH_ACTIONS.REGISTER_ERROR,\n      payload: errorMessage\n    });\n    return {\n      success: false,\n      error: errorMessage\n    };\n  }\n};\n\n// Función de logout\n//  const logout = () => {\n//    localStorage.removeItem('token');\n//    localStorage.removeItem('user');\n//    dispatch({ type: AUTH_ACTIONS.LOGOUT });\n//  };\n\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    // Leer usuario del localStorage al iniciar\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n  }, []);\n  const login = userData => {\n    localStorage.setItem('user', JSON.stringify(userData));\n    localStorage.setItem('token', 'fake-jwt-token');\n    setUser(userData);\n  };\n  const logout = () => {\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n\n  // Función para limpiar errores\n  const clearError = () => {\n    dispatch({\n      type: AUTH_ACTIONS.CLEAR_ERROR\n    });\n  };\n\n  // Función para verificar si el usuario tiene un rol específico\n  const hasRole = role => {\n    var _state$user;\n    return ((_state$user = state.user) === null || _state$user === void 0 ? void 0 : _state$user.role) === role;\n  };\n\n  // Función para verificar si el usuario es administrador\n  const isAdmin = () => {\n    return hasRole('admin');\n  };\n\n  // Función para verificar si el usuario es lector\n  const isReader = () => {\n    return hasRole('reader');\n  };\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    clearError,\n    hasRole,\n    isAdmin,\n    isReader\n  };\n\n  // return (\n  //   <AuthContext.Provider value={value}>\n  //     {children}\n  //   </AuthContext.Provider>\n  // );\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 5\n  }, this);\n};\n\n// Exportar también el contexto para casos específicos\n_s2(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nexport { AuthContext };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","useState","authService","jsxDEV","_jsxDEV","initialState","user","token","isAuthenticated","loading","error","AUTH_ACTIONS","LOGIN_START","LOGIN_SUCCESS","LOGIN_ERROR","LOGOUT","REGISTER_START","REGISTER_SUCCESS","REGISTER_ERROR","LOAD_USER","CLEAR_ERROR","authReducer","state","action","type","payload","AuthContext","useAuth","_s","context","Error","register","userData","dispatch","response","data","localStorage","setItem","JSON","stringify","success","_error$response","_error$response$data","errorMessage","message","AuthProvider","children","_s2","setUser","storedUser","getItem","parse","login","logout","removeItem","clearError","hasRole","role","_state$user","isAdmin","isReader","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jp.maldonado/Desktop/Universidad/Aplicaciones web/app_libreria/Frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect, useState } from 'react';\r\nimport { authService } from '../services/authService';\r\n\r\n// Estado inicial\r\nconst initialState = {\r\n  user: null,\r\n  token: null,\r\n  isAuthenticated: false,\r\n  loading: true,\r\n  error: null\r\n};\r\n\r\n// Tipos de acciones\r\nconst AUTH_ACTIONS = {\r\n  LOGIN_START: 'LOGIN_START',\r\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n  LOGIN_ERROR: 'LOGIN_ERROR',\r\n  LOGOUT: 'LOGOUT',\r\n  REGISTER_START: 'REGISTER_START',\r\n  REGISTER_SUCCESS: 'REGISTER_SUCCESS',\r\n  REGISTER_ERROR: 'REGISTER_ERROR',\r\n  LOAD_USER: 'LOAD_USER',\r\n  CLEAR_ERROR: 'CLEAR_ERROR'\r\n};\r\n\r\n// Reducer\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case AUTH_ACTIONS.LOGIN_START:\r\n    case AUTH_ACTIONS.REGISTER_START:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      };\r\n    \r\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\r\n    case AUTH_ACTIONS.REGISTER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    \r\n    case AUTH_ACTIONS.LOGIN_ERROR:\r\n    case AUTH_ACTIONS.REGISTER_ERROR:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n    \r\n    case AUTH_ACTIONS.LOGOUT:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    \r\n    case AUTH_ACTIONS.LOAD_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        isAuthenticated: true,\r\n        loading: false\r\n      };\r\n    \r\n    case AUTH_ACTIONS.CLEAR_ERROR:\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Crear contexto\r\nconst AuthContext = createContext();\r\n\r\n// Hook personalizado para usar el contexto\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth debe ser usado dentro de un AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n// Provider\r\n//export const AuthProvider = ({ children }) => {\r\n//  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // Cargar usuario al iniciar la aplicación\r\n // useEffect(() => {\r\n //   const loadUser = async () => {\r\n //     try {\r\n //       const token = localStorage.getItem('token');\r\n //       const userData = localStorage.getItem('user');\r\n //       \r\n //       if (token && userData) {\r\n //         const user = JSON.parse(userData);\r\n //         dispatch({\r\n //           type: AUTH_ACTIONS.LOAD_USER,\r\n //           payload: { user, token }\r\n //         });\r\n //       } else {\r\n //         dispatch({ type: AUTH_ACTIONS.LOGOUT });\r\n //       }\r\n //     } catch (error) {\r\n //       console.error('Error al cargar usuario:', error);\r\n //       dispatch({ type: AUTH_ACTIONS.LOGOUT });\r\n //     }\r\n //   };\r\n//\r\n //   loadUser();\r\n // }, []);\r\n//\r\n  // Función de login\r\n// const login = async (email, password) => {\r\n//   try {\r\n//     dispatch({ type: AUTH_ACTIONS.LOGIN_START });\r\n//     \r\n//     const response = await authService.login(email, password);\r\n//     const { user, token } = response.data;\r\n//     \r\n//     // Guardar en localStorage\r\n//     localStorage.setItem('token', token);\r\n//     localStorage.setItem('user', JSON.stringify(user));\r\n//     \r\n//     dispatch({\r\n//       type: AUTH_ACTIONS.LOGIN_SUCCESS,\r\n//       payload: { user, token }\r\n//     });\r\n//     \r\n//     return { success: true };\r\n//   } catch (error) {\r\n//     const errorMessage = error.response?.data?.message || 'Error al iniciar sesión';\r\n//     dispatch({\r\n//       type: AUTH_ACTIONS.LOGIN_ERROR,\r\n//       payload: errorMessage\r\n//     });\r\n//     return { success: false, error: errorMessage };\r\n//   }\r\n// };\r\n\r\n  // Función de registro\r\n  const register = async (userData) => {\r\n    try {\r\n      dispatch({ type: AUTH_ACTIONS.REGISTER_START });\r\n      \r\n      const response = await authService.register(userData);\r\n      const { user, token } = response.data;\r\n      \r\n      // Guardar en localStorage\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      \r\n      dispatch({\r\n        type: AUTH_ACTIONS.REGISTER_SUCCESS,\r\n        payload: { user, token }\r\n      });\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.message || 'Error al registrarse';\r\n      dispatch({\r\n        type: AUTH_ACTIONS.REGISTER_ERROR,\r\n        payload: errorMessage\r\n      });\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  // Función de logout\r\n//  const logout = () => {\r\n//    localStorage.removeItem('token');\r\n//    localStorage.removeItem('user');\r\n//    dispatch({ type: AUTH_ACTIONS.LOGOUT });\r\n//  };\r\n\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Leer usuario del localStorage al iniciar\r\n    const storedUser = localStorage.getItem('user');\r\n    if (storedUser) {\r\n      setUser(JSON.parse(storedUser));\r\n    }\r\n  }, []);\r\n\r\n  const login = (userData) => {\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n    localStorage.setItem('token', 'fake-jwt-token');\r\n    setUser(userData);\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n  };\r\n\r\n  // Función para limpiar errores\r\n  const clearError = () => {\r\n    dispatch({ type: AUTH_ACTIONS.CLEAR_ERROR });\r\n  };\r\n\r\n  // Función para verificar si el usuario tiene un rol específico\r\n  const hasRole = (role) => {\r\n    return state.user?.role === role;\r\n  };\r\n\r\n  // Función para verificar si el usuario es administrador\r\n  const isAdmin = () => {\r\n    return hasRole('admin');\r\n  };\r\n\r\n  // Función para verificar si el usuario es lector\r\n  const isReader = () => {\r\n    return hasRole('reader');\r\n  };\r\n\r\n  const value = {\r\n    ...state,\r\n    login,\r\n    register,\r\n    logout,\r\n    clearError,\r\n    hasRole,\r\n    isAdmin,\r\n    isReader\r\n  };\r\n\r\n // return (\r\n //   <AuthContext.Provider value={value}>\r\n //     {children}\r\n //   </AuthContext.Provider>\r\n // );\r\n\r\n   return (\r\n    <AuthContext.Provider value={{ user, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n\r\n};\r\n\r\n// Exportar también el contexto para casos específicos\r\nexport { AuthContext };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}