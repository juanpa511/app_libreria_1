{"ast":null,"code":"import api from './apiService';\nconst bookService = {\n  // Obtener todos los libros\n  getAllBooks: async () => {\n    try {\n      const response = await api.get('/book/all');\n      return response.data;\n    } catch (error) {\n      throw new Error('Error al obtener libros: ' + error.message);\n    }\n  },\n  // Obtener libros por tipo\n  getBooksByType: async type => {\n    try {\n      const response = await api.get(`/book/all/${type}`);\n      return response.data;\n    } catch (error) {\n      throw new Error('Error al obtener libros por tipo: ' + error.message);\n    }\n  },\n  // Obtener libro por ID\n  getBookById: async id => {\n    try {\n      const response = await api.get(`/book/${id}`);\n      return response.data;\n    } catch (error) {\n      throw new Error('Error al obtener libro: ' + error.message);\n    }\n  },\n  // Crear nuevo libro (Admin)\n  createBook: async bookData => {\n    try {\n      const response = await api.post('/book/new', bookData);\n      return response.data;\n    } catch (error) {\n      throw new Error('Error al crear libro: ' + error.message);\n    }\n  },\n  // Actualizar libro (Admin)\n  updateBook: async (id, bookData) => {\n    try {\n      const response = await api.put(`/book/${id}`, bookData);\n      return response.data;\n    } catch (error) {\n      throw new Error('Error al actualizar libro: ' + error.message);\n    }\n  },\n  // Eliminar libro (Admin)\n  deleteBook: async id => {\n    try {\n      const response = await api.delete(`/book/${id}`);\n      return response.data;\n    } catch (error) {\n      throw new Error('Error al eliminar libro: ' + error.message);\n    }\n  },\n  // Buscar libros\n  searchBooks: async query => {\n    try {\n      const response = await api.get(`/book/find/${query}`);\n      return response.data;\n    } catch (error) {\n      throw new Error('Error al buscar libros: ' + error.message);\n    }\n  }\n};\nexport default bookService;","map":{"version":3,"names":["api","bookService","getAllBooks","response","get","data","error","Error","message","getBooksByType","type","getBookById","id","createBook","bookData","post","updateBook","put","deleteBook","delete","searchBooks","query"],"sources":["C:/Users/jpval/OneDrive/Desktop/jp/aplicaciones web/app_libreria_1/Frontend/src/services/bookService.js"],"sourcesContent":["import api from './apiService';\r\n\r\nconst bookService = {\r\n  // Obtener todos los libros\r\n  getAllBooks: async () => {\r\n    try {\r\n      const response = await api.get('/book/all');\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error('Error al obtener libros: ' + error.message);\r\n    }\r\n  },\r\n\r\n  // Obtener libros por tipo\r\n  getBooksByType: async (type) => {\r\n    try {\r\n      const response = await api.get(`/book/all/${type}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error('Error al obtener libros por tipo: ' + error.message);\r\n    }\r\n  },\r\n\r\n  // Obtener libro por ID\r\n  getBookById: async (id) => {\r\n    try {\r\n      const response = await api.get(`/book/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error('Error al obtener libro: ' + error.message);\r\n    }\r\n  },\r\n\r\n  // Crear nuevo libro (Admin)\r\n  createBook: async (bookData) => {\r\n    try {\r\n      const response = await api.post('/book/new', bookData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error('Error al crear libro: ' + error.message);\r\n    }\r\n  },\r\n\r\n  // Actualizar libro (Admin)\r\n  updateBook: async (id, bookData) => {\r\n    try {\r\n      const response = await api.put(`/book/${id}`, bookData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error('Error al actualizar libro: ' + error.message);\r\n    }\r\n  },\r\n\r\n  // Eliminar libro (Admin)\r\n  deleteBook: async (id) => {\r\n    try {\r\n      const response = await api.delete(`/book/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error('Error al eliminar libro: ' + error.message);\r\n    }\r\n  },\r\n\r\n  // Buscar libros\r\n  searchBooks: async (query) => {\r\n    try {\r\n      const response = await api.get(`/book/find/${query}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error('Error al buscar libros: ' + error.message);\r\n    }\r\n  }\r\n};\r\n\r\nexport default bookService;"],"mappings":"AAAA,OAAOA,GAAG,MAAM,cAAc;AAE9B,MAAMC,WAAW,GAAG;EAClB;EACAC,WAAW,EAAE,MAAAA,CAAA,KAAY;IACvB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,WAAW,CAAC;MAC3C,OAAOD,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,2BAA2B,GAAGD,KAAK,CAACE,OAAO,CAAC;IAC9D;EACF,CAAC;EAED;EACAC,cAAc,EAAE,MAAOC,IAAI,IAAK;IAC9B,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,aAAaM,IAAI,EAAE,CAAC;MACnD,OAAOP,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,oCAAoC,GAAGD,KAAK,CAACE,OAAO,CAAC;IACvE;EACF,CAAC;EAED;EACAG,WAAW,EAAE,MAAOC,EAAE,IAAK;IACzB,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,SAASQ,EAAE,EAAE,CAAC;MAC7C,OAAOT,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,0BAA0B,GAAGD,KAAK,CAACE,OAAO,CAAC;IAC7D;EACF,CAAC;EAED;EACAK,UAAU,EAAE,MAAOC,QAAQ,IAAK;IAC9B,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMH,GAAG,CAACe,IAAI,CAAC,WAAW,EAAED,QAAQ,CAAC;MACtD,OAAOX,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,wBAAwB,GAAGD,KAAK,CAACE,OAAO,CAAC;IAC3D;EACF,CAAC;EAED;EACAQ,UAAU,EAAE,MAAAA,CAAOJ,EAAE,EAAEE,QAAQ,KAAK;IAClC,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMH,GAAG,CAACiB,GAAG,CAAC,SAASL,EAAE,EAAE,EAAEE,QAAQ,CAAC;MACvD,OAAOX,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,GAAGD,KAAK,CAACE,OAAO,CAAC;IAChE;EACF,CAAC;EAED;EACAU,UAAU,EAAE,MAAON,EAAE,IAAK;IACxB,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMH,GAAG,CAACmB,MAAM,CAAC,SAASP,EAAE,EAAE,CAAC;MAChD,OAAOT,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,2BAA2B,GAAGD,KAAK,CAACE,OAAO,CAAC;IAC9D;EACF,CAAC;EAED;EACAY,WAAW,EAAE,MAAOC,KAAK,IAAK;IAC5B,IAAI;MACF,MAAMlB,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,cAAciB,KAAK,EAAE,CAAC;MACrD,OAAOlB,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,0BAA0B,GAAGD,KAAK,CAACE,OAAO,CAAC;IAC7D;EACF;AACF,CAAC;AAED,eAAeP,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}