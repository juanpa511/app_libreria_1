{"ast":null,"code":"import { getAllBooks as getAllBooksApi, getBooksByType as getBooksByTypeApi, createBook as createBookApi, findBookByTitle as findBookByTitleApi } from './apiService';\nconst bookService = {\n  // Obtener todos los libros\n  getAllBooks: async () => {\n    try {\n      const response = await getAllBooksApi();\n      // Si la respuesta es un array directamente, devuélvela así\n      if (Array.isArray(response)) {\n        return {\n          data: response\n        };\n      }\n      // Si la respuesta es un objeto con una propiedad 'data', úsala\n      if (response && Array.isArray(response.data)) {\n        return response;\n      }\n      // Si la respuesta es un objeto con los libros en otra propiedad, ajústalo aquí\n      return {\n        data: []\n      };\n    } catch (error) {\n      throw new Error('Error al obtener libros: ' + error.message);\n    }\n  },\n  // Obtener libros por tipo\n  getBooksByType: async type => {\n    try {\n      const response = await getBooksByTypeApi(type);\n      return response;\n    } catch (error) {\n      throw new Error('Error al obtener libros por tipo: ' + error.message);\n    }\n  },\n  // Crear nuevo libro (Admin)\n  createBook: async bookData => {\n    try {\n      const response = await createBookApi(bookData);\n      return response;\n    } catch (error) {\n      throw new Error('Error al crear libro: ' + error.message);\n    }\n  },\n  // Buscar libros por título\n  searchBooks: async query => {\n    try {\n      const response = await findBookByTitleApi(query);\n      return response;\n    } catch (error) {\n      throw new Error('Error al buscar libros: ' + error.message);\n    }\n  }\n};\nexport default bookService;","map":{"version":3,"names":["getAllBooks","getAllBooksApi","getBooksByType","getBooksByTypeApi","createBook","createBookApi","findBookByTitle","findBookByTitleApi","bookService","response","Array","isArray","data","error","Error","message","type","bookData","searchBooks","query"],"sources":["C:/Users/jpval/OneDrive/Desktop/jp/aplicaciones web/app_libreria_1/Frontend/src/services/bookService.js"],"sourcesContent":["import { getAllBooks as getAllBooksApi, getBooksByType as getBooksByTypeApi, createBook as createBookApi, findBookByTitle as findBookByTitleApi } from './apiService';\r\n\r\nconst bookService = {\r\n  // Obtener todos los libros\r\n  getAllBooks: async () => {\r\n    try {\r\n      const response = await getAllBooksApi();\r\n      // Si la respuesta es un array directamente, devuélvela así\r\n      if (Array.isArray(response)) {\r\n        return { data: response };\r\n      }\r\n      // Si la respuesta es un objeto con una propiedad 'data', úsala\r\n      if (response && Array.isArray(response.data)) {\r\n        return response;\r\n      }\r\n      // Si la respuesta es un objeto con los libros en otra propiedad, ajústalo aquí\r\n      return { data: [] };\r\n    } catch (error) {\r\n      throw new Error('Error al obtener libros: ' + error.message);\r\n    }\r\n  },\r\n\r\n  // Obtener libros por tipo\r\n  getBooksByType: async (type) => {\r\n    try {\r\n      const response = await getBooksByTypeApi(type);\r\n      return response;\r\n    } catch (error) {\r\n      throw new Error('Error al obtener libros por tipo: ' + error.message);\r\n    }\r\n  },\r\n\r\n  // Crear nuevo libro (Admin)\r\n  createBook: async (bookData) => {\r\n    try {\r\n      const response = await createBookApi(bookData);\r\n      return response;\r\n    } catch (error) {\r\n      throw new Error('Error al crear libro: ' + error.message);\r\n    }\r\n  },\r\n\r\n  // Buscar libros por título\r\n  searchBooks: async (query) => {\r\n    try {\r\n      const response = await findBookByTitleApi(query);\r\n      return response;\r\n    } catch (error) {\r\n      throw new Error('Error al buscar libros: ' + error.message);\r\n    }\r\n  }\r\n};\r\n\r\nexport default bookService;"],"mappings":"AAAA,SAASA,WAAW,IAAIC,cAAc,EAAEC,cAAc,IAAIC,iBAAiB,EAAEC,UAAU,IAAIC,aAAa,EAAEC,eAAe,IAAIC,kBAAkB,QAAQ,cAAc;AAErK,MAAMC,WAAW,GAAG;EAClB;EACAR,WAAW,EAAE,MAAAA,CAAA,KAAY;IACvB,IAAI;MACF,MAAMS,QAAQ,GAAG,MAAMR,cAAc,CAAC,CAAC;MACvC;MACA,IAAIS,KAAK,CAACC,OAAO,CAACF,QAAQ,CAAC,EAAE;QAC3B,OAAO;UAAEG,IAAI,EAAEH;QAAS,CAAC;MAC3B;MACA;MACA,IAAIA,QAAQ,IAAIC,KAAK,CAACC,OAAO,CAACF,QAAQ,CAACG,IAAI,CAAC,EAAE;QAC5C,OAAOH,QAAQ;MACjB;MACA;MACA,OAAO;QAAEG,IAAI,EAAE;MAAG,CAAC;IACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,2BAA2B,GAAGD,KAAK,CAACE,OAAO,CAAC;IAC9D;EACF,CAAC;EAED;EACAb,cAAc,EAAE,MAAOc,IAAI,IAAK;IAC9B,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMN,iBAAiB,CAACa,IAAI,CAAC;MAC9C,OAAOP,QAAQ;IACjB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,oCAAoC,GAAGD,KAAK,CAACE,OAAO,CAAC;IACvE;EACF,CAAC;EAED;EACAX,UAAU,EAAE,MAAOa,QAAQ,IAAK;IAC9B,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAMJ,aAAa,CAACY,QAAQ,CAAC;MAC9C,OAAOR,QAAQ;IACjB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,wBAAwB,GAAGD,KAAK,CAACE,OAAO,CAAC;IAC3D;EACF,CAAC;EAED;EACAG,WAAW,EAAE,MAAOC,KAAK,IAAK;IAC5B,IAAI;MACF,MAAMV,QAAQ,GAAG,MAAMF,kBAAkB,CAACY,KAAK,CAAC;MAChD,OAAOV,QAAQ;IACjB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,0BAA0B,GAAGD,KAAK,CAACE,OAAO,CAAC;IAC7D;EACF;AACF,CAAC;AAED,eAAeP,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}