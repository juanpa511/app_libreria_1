{"ast":null,"code":"// src/services/apiService.js\n\nconst API_BASE_URL = 'http://localhost:8087/api';\n\n// Función para obtener el token del localStorage\nconst getToken = () => {\n  return localStorage.getItem('token');\n};\n\n// Función para obtener headers con autenticación\nconst getAuthHeaders = () => {\n  const token = getToken();\n  return {\n    'Content-Type': 'application/json',\n    ...(token && {\n      'Authorization': `Bearer ${token}`\n    })\n  };\n};\n\n// Función para manejar respuestas de la API\nconst handleResponse = async response => {\n  if (!response.ok) {\n    const errorText = await response.text();\n    let errorMessage = 'Error en la solicitud';\n    try {\n      const errorData = JSON.parse(errorText);\n      errorMessage = errorData.message || errorData.error || errorMessage;\n    } catch {\n      errorMessage = errorText || errorMessage;\n    }\n    throw new Error(errorMessage);\n  }\n  const contentType = response.headers.get('content-type');\n  if (contentType && contentType.includes('application/json')) {\n    return await response.json();\n  }\n  return await response.text();\n};\n\n// ==================== AUTENTICACIÓN ====================\n\nexport const loginUser = async credentials => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/auth/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    });\n    const data = await handleResponse(response);\n\n    // Guardar token y datos del usuario\n    if (data.token) {\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('user', JSON.stringify({\n        email: data.email || credentials.email,\n        role: data.role || 'LECTOR',\n        // Valor por defecto si no viene el rol\n        isAdmin: data.role === 'ADMIN',\n        isReader: data.role === 'LECTOR'\n      }));\n    }\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const registerUser = async userData => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/auth/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    });\n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('user');\n};\nexport const isAuthenticated = () => {\n  const token = getToken();\n  return !!token;\n};\nexport const getUserRole = () => {\n  const user = localStorage.getItem('user');\n  if (user) {\n    const userData = JSON.parse(user);\n    return userData.role;\n  }\n  return null;\n};\nexport const getUserEmail = () => {\n  const user = localStorage.getItem('user');\n  if (user) {\n    const userData = JSON.parse(user);\n    return userData.email;\n  }\n  return null;\n};\n\n// ==================== LIBROS ====================\n\nexport const getAllBooks = async () => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/book/all`, {\n      headers: getAuthHeaders()\n    });\n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\nexport const getBooksByType = async type => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/book/all/${type}`, {\n      headers: getAuthHeaders()\n    });\n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\nexport const createBook = async bookData => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/book/new`, {\n      method: 'POST',\n      headers: getAuthHeaders(),\n      body: JSON.stringify(bookData)\n    });\n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\nexport const findBookByTitle = async title => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/book/find/${encodeURIComponent(title)}`, {\n      headers: getAuthHeaders()\n    });\n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\nexport const createBookCopy = async copyData => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/book/newcopy`, {\n      method: 'POST',\n      headers: getAuthHeaders(),\n      body: JSON.stringify(copyData)\n    });\n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\nexport const getAvailableCopies = async title => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/book/copy/${encodeURIComponent(title)}`, {\n      headers: getAuthHeaders()\n    });\n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\n\n// ==================== PRÉSTAMOS ====================\n\nexport const createBooking = async bookingData => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/booking/new`, {\n      method: 'POST',\n      headers: getAuthHeaders(),\n      body: JSON.stringify(bookingData)\n    });\n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\nexport const getBookingsByEmail = async email => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/booking/find/${encodeURIComponent(email)}`, {\n      headers: getAuthHeaders()\n    });\n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\nexport const returnBook = async (bookingId, returnData) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/booking/return/${bookingId}`, {\n      method: 'POST',\n      headers: getAuthHeaders(),\n      body: JSON.stringify(returnData)\n    });\n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\n\n// ==================== LECTORES ====================\n\nexport const findReaderByEmail = async email => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/reader/find/${encodeURIComponent(email)}`, {\n      headers: getAuthHeaders()\n    });\n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\nexport const updateReaderState = async (email, stateData) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/reader/state/${encodeURIComponent(email)}`, {\n      method: 'POST',\n      headers: getAuthHeaders(),\n      body: JSON.stringify(stateData)\n    });\n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\n\n// ==================== MULTAS ====================\n\nexport const getFinesByEmail = async email => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/fine/find/${encodeURIComponent(email)}`, {\n      headers: getAuthHeaders()\n    });\n    return await handleResponse(response);\n  } catch (error) {\n    throw error;\n  }\n};\nexport default {\n  // Auth\n  loginUser,\n  registerUser,\n  logout,\n  isAuthenticated,\n  getUserRole,\n  getUserEmail,\n  // Books\n  getAllBooks,\n  getBooksByType,\n  createBook,\n  findBookByTitle,\n  createBookCopy,\n  getAvailableCopies,\n  // Bookings\n  createBooking,\n  getBookingsByEmail,\n  returnBook,\n  // Readers\n  findReaderByEmail,\n  updateReaderState,\n  // Fines\n  getFinesByEmail\n};","map":{"version":3,"names":["API_BASE_URL","getToken","localStorage","getItem","getAuthHeaders","token","handleResponse","response","ok","errorText","text","errorMessage","errorData","JSON","parse","message","error","Error","contentType","headers","get","includes","json","loginUser","credentials","fetch","method","body","stringify","data","setItem","email","role","isAdmin","isReader","registerUser","userData","logout","removeItem","isAuthenticated","getUserRole","user","getUserEmail","getAllBooks","getBooksByType","type","createBook","bookData","findBookByTitle","title","encodeURIComponent","createBookCopy","copyData","getAvailableCopies","createBooking","bookingData","getBookingsByEmail","returnBook","bookingId","returnData","findReaderByEmail","updateReaderState","stateData","getFinesByEmail"],"sources":["C:/Users/jpval/OneDrive/Desktop/jp/aplicaciones web/app_libreria_1/Frontend/src/services/apiService.js"],"sourcesContent":["// src/services/apiService.js\r\n\r\nconst API_BASE_URL = 'http://localhost:8087/api';\r\n\r\n// Función para obtener el token del localStorage\r\nconst getToken = () => {\r\n  return localStorage.getItem('token');\r\n};\r\n\r\n// Función para obtener headers con autenticación\r\nconst getAuthHeaders = () => {\r\n  const token = getToken();\r\n  return {\r\n    'Content-Type': 'application/json',\r\n    ...(token && { 'Authorization': `Bearer ${token}` })\r\n  };\r\n};\r\n\r\n// Función para manejar respuestas de la API\r\nconst handleResponse = async (response) => {\r\n  if (!response.ok) {\r\n    const errorText = await response.text();\r\n    let errorMessage = 'Error en la solicitud';\r\n    \r\n    try {\r\n      const errorData = JSON.parse(errorText);\r\n      errorMessage = errorData.message || errorData.error || errorMessage;\r\n    } catch {\r\n      errorMessage = errorText || errorMessage;\r\n    }\r\n    \r\n    throw new Error(errorMessage);\r\n  }\r\n  \r\n  const contentType = response.headers.get('content-type');\r\n  if (contentType && contentType.includes('application/json')) {\r\n    return await response.json();\r\n  }\r\n  return await response.text();\r\n};\r\n\r\n// ==================== AUTENTICACIÓN ====================\r\n\r\nexport const loginUser = async (credentials) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/auth/login`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(credentials),\r\n    });\r\n\r\n    const data = await handleResponse(response);\r\n    \r\n    // Guardar token y datos del usuario\r\n    if (data.token) {\r\n      localStorage.setItem('token', data.token);\r\n      localStorage.setItem('user', JSON.stringify({\r\n        email: data.email || credentials.email,\r\n        role: data.role || 'LECTOR', // Valor por defecto si no viene el rol\r\n        isAdmin: data.role === 'ADMIN',\r\n        isReader: data.role === 'LECTOR'\r\n      }));\r\n    }\r\n    \r\n    return data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const registerUser = async (userData) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/auth/register`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(userData),\r\n    });\r\n\r\n    return await handleResponse(response);\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem('token');\r\n  localStorage.removeItem('user');\r\n};\r\n\r\nexport const isAuthenticated = () => {\r\n  const token = getToken();\r\n  return !!token;\r\n};\r\n\r\nexport const getUserRole = () => {\r\n  const user = localStorage.getItem('user');\r\n  if (user) {\r\n    const userData = JSON.parse(user);\r\n    return userData.role;\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const getUserEmail = () => {\r\n  const user = localStorage.getItem('user');\r\n  if (user) {\r\n    const userData = JSON.parse(user);\r\n    return userData.email;\r\n  }\r\n  return null;\r\n};\r\n\r\n// ==================== LIBROS ====================\r\n\r\nexport const getAllBooks = async () => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/book/all`, {\r\n      headers: getAuthHeaders(),\r\n    });\r\n    \r\n    return await handleResponse(response);\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getBooksByType = async (type) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/book/all/${type}`, {\r\n      headers: getAuthHeaders(),\r\n    });\r\n    \r\n    return await handleResponse(response);\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const createBook = async (bookData) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/book/new`, {\r\n      method: 'POST',\r\n      headers: getAuthHeaders(),\r\n      body: JSON.stringify(bookData),\r\n    });\r\n    \r\n    return await handleResponse(response);\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const findBookByTitle = async (title) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/book/find/${encodeURIComponent(title)}`, {\r\n      headers: getAuthHeaders(),\r\n    });\r\n    \r\n    return await handleResponse(response);\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const createBookCopy = async (copyData) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/book/newcopy`, {\r\n      method: 'POST',\r\n      headers: getAuthHeaders(),\r\n      body: JSON.stringify(copyData),\r\n    });\r\n    \r\n    return await handleResponse(response);\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getAvailableCopies = async (title) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/book/copy/${encodeURIComponent(title)}`, {\r\n      headers: getAuthHeaders(),\r\n    });\r\n    \r\n    return await handleResponse(response);\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ==================== PRÉSTAMOS ====================\r\n\r\nexport const createBooking = async (bookingData) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/booking/new`, {\r\n      method: 'POST',\r\n      headers: getAuthHeaders(),\r\n      body: JSON.stringify(bookingData),\r\n    });\r\n    \r\n    return await handleResponse(response);\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getBookingsByEmail = async (email) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/booking/find/${encodeURIComponent(email)}`, {\r\n      headers: getAuthHeaders(),\r\n    });\r\n    \r\n    return await handleResponse(response);\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const returnBook = async (bookingId, returnData) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/booking/return/${bookingId}`, {\r\n      method: 'POST',\r\n      headers: getAuthHeaders(),\r\n      body: JSON.stringify(returnData),\r\n    });\r\n    \r\n    return await handleResponse(response);\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ==================== LECTORES ====================\r\n\r\nexport const findReaderByEmail = async (email) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/reader/find/${encodeURIComponent(email)}`, {\r\n      headers: getAuthHeaders(),\r\n    });\r\n    \r\n    return await handleResponse(response);\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateReaderState = async (email, stateData) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/reader/state/${encodeURIComponent(email)}`, {\r\n      method: 'POST',\r\n      headers: getAuthHeaders(),\r\n      body: JSON.stringify(stateData),\r\n    });\r\n    \r\n    return await handleResponse(response);\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ==================== MULTAS ====================\r\n\r\nexport const getFinesByEmail = async (email) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/fine/find/${encodeURIComponent(email)}`, {\r\n      headers: getAuthHeaders(),\r\n    });\r\n    \r\n    return await handleResponse(response);\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default {\r\n  // Auth\r\n  loginUser,\r\n  registerUser,\r\n  logout,\r\n  isAuthenticated,\r\n  getUserRole,\r\n  getUserEmail,\r\n  \r\n  // Books\r\n  getAllBooks,\r\n  getBooksByType,\r\n  createBook,\r\n  findBookByTitle,\r\n  createBookCopy,\r\n  getAvailableCopies,\r\n  \r\n  // Bookings\r\n  createBooking,\r\n  getBookingsByEmail,\r\n  returnBook,\r\n  \r\n  // Readers\r\n  findReaderByEmail,\r\n  updateReaderState,\r\n  \r\n  // Fines\r\n  getFinesByEmail\r\n};"],"mappings":"AAAA;;AAEA,MAAMA,YAAY,GAAG,2BAA2B;;AAEhD;AACA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB,OAAOC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AACtC,CAAC;;AAED;AACA,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,MAAMC,KAAK,GAAGJ,QAAQ,CAAC,CAAC;EACxB,OAAO;IACL,cAAc,EAAE,kBAAkB;IAClC,IAAII,KAAK,IAAI;MAAE,eAAe,EAAE,UAAUA,KAAK;IAAG,CAAC;EACrD,CAAC;AACH,CAAC;;AAED;AACA,MAAMC,cAAc,GAAG,MAAOC,QAAQ,IAAK;EACzC,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;IAChB,MAAMC,SAAS,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACvC,IAAIC,YAAY,GAAG,uBAAuB;IAE1C,IAAI;MACF,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACL,SAAS,CAAC;MACvCE,YAAY,GAAGC,SAAS,CAACG,OAAO,IAAIH,SAAS,CAACI,KAAK,IAAIL,YAAY;IACrE,CAAC,CAAC,MAAM;MACNA,YAAY,GAAGF,SAAS,IAAIE,YAAY;IAC1C;IAEA,MAAM,IAAIM,KAAK,CAACN,YAAY,CAAC;EAC/B;EAEA,MAAMO,WAAW,GAAGX,QAAQ,CAACY,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;EACxD,IAAIF,WAAW,IAAIA,WAAW,CAACG,QAAQ,CAAC,kBAAkB,CAAC,EAAE;IAC3D,OAAO,MAAMd,QAAQ,CAACe,IAAI,CAAC,CAAC;EAC9B;EACA,OAAO,MAAMf,QAAQ,CAACG,IAAI,CAAC,CAAC;AAC9B,CAAC;;AAED;;AAEA,OAAO,MAAMa,SAAS,GAAG,MAAOC,WAAW,IAAK;EAC9C,IAAI;IACF,MAAMjB,QAAQ,GAAG,MAAMkB,KAAK,CAAC,GAAGzB,YAAY,aAAa,EAAE;MACzD0B,MAAM,EAAE,MAAM;MACdP,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDQ,IAAI,EAAEd,IAAI,CAACe,SAAS,CAACJ,WAAW;IAClC,CAAC,CAAC;IAEF,MAAMK,IAAI,GAAG,MAAMvB,cAAc,CAACC,QAAQ,CAAC;;IAE3C;IACA,IAAIsB,IAAI,CAACxB,KAAK,EAAE;MACdH,YAAY,CAAC4B,OAAO,CAAC,OAAO,EAAED,IAAI,CAACxB,KAAK,CAAC;MACzCH,YAAY,CAAC4B,OAAO,CAAC,MAAM,EAAEjB,IAAI,CAACe,SAAS,CAAC;QAC1CG,KAAK,EAAEF,IAAI,CAACE,KAAK,IAAIP,WAAW,CAACO,KAAK;QACtCC,IAAI,EAAEH,IAAI,CAACG,IAAI,IAAI,QAAQ;QAAE;QAC7BC,OAAO,EAAEJ,IAAI,CAACG,IAAI,KAAK,OAAO;QAC9BE,QAAQ,EAAEL,IAAI,CAACG,IAAI,KAAK;MAC1B,CAAC,CAAC,CAAC;IACL;IAEA,OAAOH,IAAI;EACb,CAAC,CAAC,OAAOb,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMmB,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC9C,IAAI;IACF,MAAM7B,QAAQ,GAAG,MAAMkB,KAAK,CAAC,GAAGzB,YAAY,gBAAgB,EAAE;MAC5D0B,MAAM,EAAE,MAAM;MACdP,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDQ,IAAI,EAAEd,IAAI,CAACe,SAAS,CAACQ,QAAQ;IAC/B,CAAC,CAAC;IAEF,OAAO,MAAM9B,cAAc,CAACC,QAAQ,CAAC;EACvC,CAAC,CAAC,OAAOS,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMqB,MAAM,GAAGA,CAAA,KAAM;EAC1BnC,YAAY,CAACoC,UAAU,CAAC,OAAO,CAAC;EAChCpC,YAAY,CAACoC,UAAU,CAAC,MAAM,CAAC;AACjC,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EACnC,MAAMlC,KAAK,GAAGJ,QAAQ,CAAC,CAAC;EACxB,OAAO,CAAC,CAACI,KAAK;AAChB,CAAC;AAED,OAAO,MAAMmC,WAAW,GAAGA,CAAA,KAAM;EAC/B,MAAMC,IAAI,GAAGvC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EACzC,IAAIsC,IAAI,EAAE;IACR,MAAML,QAAQ,GAAGvB,IAAI,CAACC,KAAK,CAAC2B,IAAI,CAAC;IACjC,OAAOL,QAAQ,CAACJ,IAAI;EACtB;EACA,OAAO,IAAI;AACb,CAAC;AAED,OAAO,MAAMU,YAAY,GAAGA,CAAA,KAAM;EAChC,MAAMD,IAAI,GAAGvC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EACzC,IAAIsC,IAAI,EAAE;IACR,MAAML,QAAQ,GAAGvB,IAAI,CAACC,KAAK,CAAC2B,IAAI,CAAC;IACjC,OAAOL,QAAQ,CAACL,KAAK;EACvB;EACA,OAAO,IAAI;AACb,CAAC;;AAED;;AAEA,OAAO,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACF,MAAMpC,QAAQ,GAAG,MAAMkB,KAAK,CAAC,GAAGzB,YAAY,WAAW,EAAE;MACvDmB,OAAO,EAAEf,cAAc,CAAC;IAC1B,CAAC,CAAC;IAEF,OAAO,MAAME,cAAc,CAACC,QAAQ,CAAC;EACvC,CAAC,CAAC,OAAOS,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAM4B,cAAc,GAAG,MAAOC,IAAI,IAAK;EAC5C,IAAI;IACF,MAAMtC,QAAQ,GAAG,MAAMkB,KAAK,CAAC,GAAGzB,YAAY,aAAa6C,IAAI,EAAE,EAAE;MAC/D1B,OAAO,EAAEf,cAAc,CAAC;IAC1B,CAAC,CAAC;IAEF,OAAO,MAAME,cAAc,CAACC,QAAQ,CAAC;EACvC,CAAC,CAAC,OAAOS,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAM8B,UAAU,GAAG,MAAOC,QAAQ,IAAK;EAC5C,IAAI;IACF,MAAMxC,QAAQ,GAAG,MAAMkB,KAAK,CAAC,GAAGzB,YAAY,WAAW,EAAE;MACvD0B,MAAM,EAAE,MAAM;MACdP,OAAO,EAAEf,cAAc,CAAC,CAAC;MACzBuB,IAAI,EAAEd,IAAI,CAACe,SAAS,CAACmB,QAAQ;IAC/B,CAAC,CAAC;IAEF,OAAO,MAAMzC,cAAc,CAACC,QAAQ,CAAC;EACvC,CAAC,CAAC,OAAOS,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMgC,eAAe,GAAG,MAAOC,KAAK,IAAK;EAC9C,IAAI;IACF,MAAM1C,QAAQ,GAAG,MAAMkB,KAAK,CAAC,GAAGzB,YAAY,cAAckD,kBAAkB,CAACD,KAAK,CAAC,EAAE,EAAE;MACrF9B,OAAO,EAAEf,cAAc,CAAC;IAC1B,CAAC,CAAC;IAEF,OAAO,MAAME,cAAc,CAACC,QAAQ,CAAC;EACvC,CAAC,CAAC,OAAOS,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMmC,cAAc,GAAG,MAAOC,QAAQ,IAAK;EAChD,IAAI;IACF,MAAM7C,QAAQ,GAAG,MAAMkB,KAAK,CAAC,GAAGzB,YAAY,eAAe,EAAE;MAC3D0B,MAAM,EAAE,MAAM;MACdP,OAAO,EAAEf,cAAc,CAAC,CAAC;MACzBuB,IAAI,EAAEd,IAAI,CAACe,SAAS,CAACwB,QAAQ;IAC/B,CAAC,CAAC;IAEF,OAAO,MAAM9C,cAAc,CAACC,QAAQ,CAAC;EACvC,CAAC,CAAC,OAAOS,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMqC,kBAAkB,GAAG,MAAOJ,KAAK,IAAK;EACjD,IAAI;IACF,MAAM1C,QAAQ,GAAG,MAAMkB,KAAK,CAAC,GAAGzB,YAAY,cAAckD,kBAAkB,CAACD,KAAK,CAAC,EAAE,EAAE;MACrF9B,OAAO,EAAEf,cAAc,CAAC;IAC1B,CAAC,CAAC;IAEF,OAAO,MAAME,cAAc,CAACC,QAAQ,CAAC;EACvC,CAAC,CAAC,OAAOS,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;;AAEA,OAAO,MAAMsC,aAAa,GAAG,MAAOC,WAAW,IAAK;EAClD,IAAI;IACF,MAAMhD,QAAQ,GAAG,MAAMkB,KAAK,CAAC,GAAGzB,YAAY,cAAc,EAAE;MAC1D0B,MAAM,EAAE,MAAM;MACdP,OAAO,EAAEf,cAAc,CAAC,CAAC;MACzBuB,IAAI,EAAEd,IAAI,CAACe,SAAS,CAAC2B,WAAW;IAClC,CAAC,CAAC;IAEF,OAAO,MAAMjD,cAAc,CAACC,QAAQ,CAAC;EACvC,CAAC,CAAC,OAAOS,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMwC,kBAAkB,GAAG,MAAOzB,KAAK,IAAK;EACjD,IAAI;IACF,MAAMxB,QAAQ,GAAG,MAAMkB,KAAK,CAAC,GAAGzB,YAAY,iBAAiBkD,kBAAkB,CAACnB,KAAK,CAAC,EAAE,EAAE;MACxFZ,OAAO,EAAEf,cAAc,CAAC;IAC1B,CAAC,CAAC;IAEF,OAAO,MAAME,cAAc,CAACC,QAAQ,CAAC;EACvC,CAAC,CAAC,OAAOS,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMyC,UAAU,GAAG,MAAAA,CAAOC,SAAS,EAAEC,UAAU,KAAK;EACzD,IAAI;IACF,MAAMpD,QAAQ,GAAG,MAAMkB,KAAK,CAAC,GAAGzB,YAAY,mBAAmB0D,SAAS,EAAE,EAAE;MAC1EhC,MAAM,EAAE,MAAM;MACdP,OAAO,EAAEf,cAAc,CAAC,CAAC;MACzBuB,IAAI,EAAEd,IAAI,CAACe,SAAS,CAAC+B,UAAU;IACjC,CAAC,CAAC;IAEF,OAAO,MAAMrD,cAAc,CAACC,QAAQ,CAAC;EACvC,CAAC,CAAC,OAAOS,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;;AAEA,OAAO,MAAM4C,iBAAiB,GAAG,MAAO7B,KAAK,IAAK;EAChD,IAAI;IACF,MAAMxB,QAAQ,GAAG,MAAMkB,KAAK,CAAC,GAAGzB,YAAY,gBAAgBkD,kBAAkB,CAACnB,KAAK,CAAC,EAAE,EAAE;MACvFZ,OAAO,EAAEf,cAAc,CAAC;IAC1B,CAAC,CAAC;IAEF,OAAO,MAAME,cAAc,CAACC,QAAQ,CAAC;EACvC,CAAC,CAAC,OAAOS,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAM6C,iBAAiB,GAAG,MAAAA,CAAO9B,KAAK,EAAE+B,SAAS,KAAK;EAC3D,IAAI;IACF,MAAMvD,QAAQ,GAAG,MAAMkB,KAAK,CAAC,GAAGzB,YAAY,iBAAiBkD,kBAAkB,CAACnB,KAAK,CAAC,EAAE,EAAE;MACxFL,MAAM,EAAE,MAAM;MACdP,OAAO,EAAEf,cAAc,CAAC,CAAC;MACzBuB,IAAI,EAAEd,IAAI,CAACe,SAAS,CAACkC,SAAS;IAChC,CAAC,CAAC;IAEF,OAAO,MAAMxD,cAAc,CAACC,QAAQ,CAAC;EACvC,CAAC,CAAC,OAAOS,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;;AAEA,OAAO,MAAM+C,eAAe,GAAG,MAAOhC,KAAK,IAAK;EAC9C,IAAI;IACF,MAAMxB,QAAQ,GAAG,MAAMkB,KAAK,CAAC,GAAGzB,YAAY,cAAckD,kBAAkB,CAACnB,KAAK,CAAC,EAAE,EAAE;MACrFZ,OAAO,EAAEf,cAAc,CAAC;IAC1B,CAAC,CAAC;IAEF,OAAO,MAAME,cAAc,CAACC,QAAQ,CAAC;EACvC,CAAC,CAAC,OAAOS,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,eAAe;EACb;EACAO,SAAS;EACTY,YAAY;EACZE,MAAM;EACNE,eAAe;EACfC,WAAW;EACXE,YAAY;EAEZ;EACAC,WAAW;EACXC,cAAc;EACdE,UAAU;EACVE,eAAe;EACfG,cAAc;EACdE,kBAAkB;EAElB;EACAC,aAAa;EACbE,kBAAkB;EAClBC,UAAU;EAEV;EACAG,iBAAiB;EACjBC,iBAAiB;EAEjB;EACAE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}