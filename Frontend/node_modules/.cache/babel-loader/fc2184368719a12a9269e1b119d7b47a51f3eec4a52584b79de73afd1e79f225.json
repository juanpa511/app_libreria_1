{"ast":null,"code":"import { getAllFines as fetchAllFines, getFinesByEmail as fetchFinesByEmail, createFine as apiCreateFine, updateFine as apiUpdateFine, payFine as apiPayFine, deleteFine as apiDeleteFine, getUserEmail } from './apiService';\nconst fineService = {\n  // Obtener multas del usuario actual\n  getMyFines: async () => {\n    try {\n      const userEmail = getUserEmail();\n      if (!userEmail) {\n        throw new Error('Usuario no autenticado');\n      }\n      const response = await fetchFinesByEmail(userEmail);\n      return response;\n    } catch (error) {\n      throw new Error('Error al obtener mis multas: ' + error.message);\n    }\n  },\n  // Obtener todas las multas (Admin)\n  getAllFines: async (filters = {}) => {\n    try {\n      const response = await fetchAllFines();\n      return response;\n    } catch (error) {\n      throw new Error('Error al obtener multas: ' + error.message);\n    }\n  },\n  // Obtener multas por email (Admin)\n  getFinesByUser: async email => {\n    try {\n      const response = await fetchFinesByEmail(email);\n      return response;\n    } catch (error) {\n      throw new Error('Error al obtener multas del usuario: ' + error.message);\n    }\n  },\n  // Pagar multa\n  payFine: async fineId => {\n    try {\n      const response = await apiPayFine(fineId);\n      return response;\n    } catch (error) {\n      throw new Error('Error al pagar multa: ' + error.message);\n    }\n  },\n  // Crear multa (Admin)\n  createFine: async fineData => {\n    try {\n      const response = await apiCreateFine(fineData);\n      return response;\n    } catch (error) {\n      throw new Error('Error al crear multa: ' + error.message);\n    }\n  },\n  // Actualizar multa (Admin)\n  updateFine: async (id, fineData) => {\n    try {\n      const response = await apiUpdateFine(id, fineData);\n      return response;\n    } catch (error) {\n      throw new Error('Error al actualizar multa: ' + error.message);\n    }\n  },\n  // Eliminar multa (Admin)\n  deleteFine: async id => {\n    try {\n      const response = await apiDeleteFine(id);\n      return response;\n    } catch (error) {\n      throw new Error('Error al eliminar multa: ' + error.message);\n    }\n  }\n};\nexport default fineService;","map":{"version":3,"names":["getAllFines","fetchAllFines","getFinesByEmail","fetchFinesByEmail","createFine","apiCreateFine","updateFine","apiUpdateFine","payFine","apiPayFine","deleteFine","apiDeleteFine","getUserEmail","fineService","getMyFines","userEmail","Error","response","error","message","filters","getFinesByUser","email","fineId","fineData","id"],"sources":["C:/Users/jpval/OneDrive/Desktop/jp/aplicaciones web/app_libreria_1/Frontend/src/services/fineService.js"],"sourcesContent":["import { \r\n  getAllFines as fetchAllFines, \r\n  getFinesByEmail as fetchFinesByEmail,\r\n  createFine as apiCreateFine,\r\n  updateFine as apiUpdateFine,\r\n  payFine as apiPayFine,\r\n  deleteFine as apiDeleteFine,\r\n  getUserEmail\r\n} from './apiService';\r\n\r\nconst fineService = {\r\n  // Obtener multas del usuario actual\r\n  getMyFines: async () => {\r\n    try {\r\n      const userEmail = getUserEmail();\r\n      if (!userEmail) {\r\n        throw new Error('Usuario no autenticado');\r\n      }\r\n      const response = await fetchFinesByEmail(userEmail);\r\n      return response;\r\n    } catch (error) {\r\n      throw new Error('Error al obtener mis multas: ' + error.message);\r\n    }\r\n  },\r\n\r\n  // Obtener todas las multas (Admin)\r\n  getAllFines: async (filters = {}) => {\r\n    try {\r\n      const response = await fetchAllFines();\r\n      return response;\r\n    } catch (error) {\r\n      throw new Error('Error al obtener multas: ' + error.message);\r\n    }\r\n  },\r\n\r\n  // Obtener multas por email (Admin)\r\n  getFinesByUser: async (email) => {\r\n    try {\r\n      const response = await fetchFinesByEmail(email);\r\n      return response;\r\n    } catch (error) {\r\n      throw new Error('Error al obtener multas del usuario: ' + error.message);\r\n    }\r\n  },\r\n\r\n  // Pagar multa\r\n  payFine: async (fineId) => {\r\n    try {\r\n      const response = await apiPayFine(fineId);\r\n      return response;\r\n    } catch (error) {\r\n      throw new Error('Error al pagar multa: ' + error.message);\r\n    }\r\n  },\r\n\r\n  // Crear multa (Admin)\r\n  createFine: async (fineData) => {\r\n    try {\r\n      const response = await apiCreateFine(fineData);\r\n      return response;\r\n    } catch (error) {\r\n      throw new Error('Error al crear multa: ' + error.message);\r\n    }\r\n  },\r\n\r\n  // Actualizar multa (Admin)\r\n  updateFine: async (id, fineData) => {\r\n    try {\r\n      const response = await apiUpdateFine(id, fineData);\r\n      return response;\r\n    } catch (error) {\r\n      throw new Error('Error al actualizar multa: ' + error.message);\r\n    }\r\n  },\r\n\r\n  // Eliminar multa (Admin)\r\n  deleteFine: async (id) => {\r\n    try {\r\n      const response = await apiDeleteFine(id);\r\n      return response;\r\n    } catch (error) {\r\n      throw new Error('Error al eliminar multa: ' + error.message);\r\n    }\r\n  }\r\n};\r\n\r\nexport default fineService;"],"mappings":"AAAA,SACEA,WAAW,IAAIC,aAAa,EAC5BC,eAAe,IAAIC,iBAAiB,EACpCC,UAAU,IAAIC,aAAa,EAC3BC,UAAU,IAAIC,aAAa,EAC3BC,OAAO,IAAIC,UAAU,EACrBC,UAAU,IAAIC,aAAa,EAC3BC,YAAY,QACP,cAAc;AAErB,MAAMC,WAAW,GAAG;EAClB;EACAC,UAAU,EAAE,MAAAA,CAAA,KAAY;IACtB,IAAI;MACF,MAAMC,SAAS,GAAGH,YAAY,CAAC,CAAC;MAChC,IAAI,CAACG,SAAS,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;MAC3C;MACA,MAAMC,QAAQ,GAAG,MAAMd,iBAAiB,CAACY,SAAS,CAAC;MACnD,OAAOE,QAAQ;IACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAIF,KAAK,CAAC,+BAA+B,GAAGE,KAAK,CAACC,OAAO,CAAC;IAClE;EACF,CAAC;EAED;EACAnB,WAAW,EAAE,MAAAA,CAAOoB,OAAO,GAAG,CAAC,CAAC,KAAK;IACnC,IAAI;MACF,MAAMH,QAAQ,GAAG,MAAMhB,aAAa,CAAC,CAAC;MACtC,OAAOgB,QAAQ;IACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAIF,KAAK,CAAC,2BAA2B,GAAGE,KAAK,CAACC,OAAO,CAAC;IAC9D;EACF,CAAC;EAED;EACAE,cAAc,EAAE,MAAOC,KAAK,IAAK;IAC/B,IAAI;MACF,MAAML,QAAQ,GAAG,MAAMd,iBAAiB,CAACmB,KAAK,CAAC;MAC/C,OAAOL,QAAQ;IACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAIF,KAAK,CAAC,uCAAuC,GAAGE,KAAK,CAACC,OAAO,CAAC;IAC1E;EACF,CAAC;EAED;EACAX,OAAO,EAAE,MAAOe,MAAM,IAAK;IACzB,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMR,UAAU,CAACc,MAAM,CAAC;MACzC,OAAON,QAAQ;IACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAIF,KAAK,CAAC,wBAAwB,GAAGE,KAAK,CAACC,OAAO,CAAC;IAC3D;EACF,CAAC;EAED;EACAf,UAAU,EAAE,MAAOoB,QAAQ,IAAK;IAC9B,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMZ,aAAa,CAACmB,QAAQ,CAAC;MAC9C,OAAOP,QAAQ;IACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAIF,KAAK,CAAC,wBAAwB,GAAGE,KAAK,CAACC,OAAO,CAAC;IAC3D;EACF,CAAC;EAED;EACAb,UAAU,EAAE,MAAAA,CAAOmB,EAAE,EAAED,QAAQ,KAAK;IAClC,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMV,aAAa,CAACkB,EAAE,EAAED,QAAQ,CAAC;MAClD,OAAOP,QAAQ;IACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAIF,KAAK,CAAC,6BAA6B,GAAGE,KAAK,CAACC,OAAO,CAAC;IAChE;EACF,CAAC;EAED;EACAT,UAAU,EAAE,MAAOe,EAAE,IAAK;IACxB,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAMN,aAAa,CAACc,EAAE,CAAC;MACxC,OAAOR,QAAQ;IACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAIF,KAAK,CAAC,2BAA2B,GAAGE,KAAK,CAACC,OAAO,CAAC;IAC9D;EACF;AACF,CAAC;AAED,eAAeN,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}