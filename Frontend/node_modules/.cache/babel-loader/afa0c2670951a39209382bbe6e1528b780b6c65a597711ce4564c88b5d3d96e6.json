{"ast":null,"code":"import { getAllBooks as getAllBooksApi, getBooksByType as getBooksByTypeApi, createBook as createBookApi, findBookByTitle as findBookByTitleApi } from './apiService';\nconst bookService = {\n  // Obtener todos los libros\n  getAllBooks: async () => {\n    try {\n      const response = await getAllBooksApi();\n      return response;\n    } catch (error) {\n      throw new Error('Error al obtener libros: ' + error.message);\n    }\n  },\n  // Obtener libros por tipo\n  getBooksByType: async type => {\n    try {\n      const response = await getBooksByTypeApi(type);\n      return response;\n    } catch (error) {\n      throw new Error('Error al obtener libros por tipo: ' + error.message);\n    }\n  },\n  // Crear nuevo libro (Admin)\n  createBook: async bookData => {\n    try {\n      const response = await createBookApi(bookData);\n      return response;\n    } catch (error) {\n      throw new Error('Error al crear libro: ' + error.message);\n    }\n  },\n  // Buscar libros por título\n  searchBooks: async query => {\n    try {\n      const response = await findBookByTitleApi(query);\n      return response;\n    } catch (error) {\n      throw new Error('Error al buscar libros: ' + error.message);\n    }\n  }\n};\nexport default bookService;","map":{"version":3,"names":["getAllBooks","getAllBooksApi","getBooksByType","getBooksByTypeApi","createBook","createBookApi","findBookByTitle","findBookByTitleApi","bookService","response","error","Error","message","type","bookData","searchBooks","query"],"sources":["C:/Users/jpval/OneDrive/Desktop/jp/aplicaciones web/app_libreria_1/Frontend/src/services/bookService.js"],"sourcesContent":["import { getAllBooks as getAllBooksApi, getBooksByType as getBooksByTypeApi, createBook as createBookApi, findBookByTitle as findBookByTitleApi } from './apiService';\r\n\r\nconst bookService = {\r\n  // Obtener todos los libros\r\n  getAllBooks: async () => {\r\n    try {\r\n      const response = await getAllBooksApi();\r\n      return response;\r\n    } catch (error) {\r\n      throw new Error('Error al obtener libros: ' + error.message);\r\n    }\r\n  },\r\n\r\n  // Obtener libros por tipo\r\n  getBooksByType: async (type) => {\r\n    try {\r\n      const response = await getBooksByTypeApi(type);\r\n      return response;\r\n    } catch (error) {\r\n      throw new Error('Error al obtener libros por tipo: ' + error.message);\r\n    }\r\n  },\r\n\r\n  // Crear nuevo libro (Admin)\r\n  createBook: async (bookData) => {\r\n    try {\r\n      const response = await createBookApi(bookData);\r\n      return response;\r\n    } catch (error) {\r\n      throw new Error('Error al crear libro: ' + error.message);\r\n    }\r\n  },\r\n\r\n  // Buscar libros por título\r\n  searchBooks: async (query) => {\r\n    try {\r\n      const response = await findBookByTitleApi(query);\r\n      return response;\r\n    } catch (error) {\r\n      throw new Error('Error al buscar libros: ' + error.message);\r\n    }\r\n  }\r\n};\r\n\r\nexport default bookService;"],"mappings":"AAAA,SAASA,WAAW,IAAIC,cAAc,EAAEC,cAAc,IAAIC,iBAAiB,EAAEC,UAAU,IAAIC,aAAa,EAAEC,eAAe,IAAIC,kBAAkB,QAAQ,cAAc;AAErK,MAAMC,WAAW,GAAG;EAClB;EACAR,WAAW,EAAE,MAAAA,CAAA,KAAY;IACvB,IAAI;MACF,MAAMS,QAAQ,GAAG,MAAMR,cAAc,CAAC,CAAC;MACvC,OAAOQ,QAAQ;IACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,2BAA2B,GAAGD,KAAK,CAACE,OAAO,CAAC;IAC9D;EACF,CAAC;EAED;EACAV,cAAc,EAAE,MAAOW,IAAI,IAAK;IAC9B,IAAI;MACF,MAAMJ,QAAQ,GAAG,MAAMN,iBAAiB,CAACU,IAAI,CAAC;MAC9C,OAAOJ,QAAQ;IACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,oCAAoC,GAAGD,KAAK,CAACE,OAAO,CAAC;IACvE;EACF,CAAC;EAED;EACAR,UAAU,EAAE,MAAOU,QAAQ,IAAK;IAC9B,IAAI;MACF,MAAML,QAAQ,GAAG,MAAMJ,aAAa,CAACS,QAAQ,CAAC;MAC9C,OAAOL,QAAQ;IACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,wBAAwB,GAAGD,KAAK,CAACE,OAAO,CAAC;IAC3D;EACF,CAAC;EAED;EACAG,WAAW,EAAE,MAAOC,KAAK,IAAK;IAC5B,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMF,kBAAkB,CAACS,KAAK,CAAC;MAChD,OAAOP,QAAQ;IACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,0BAA0B,GAAGD,KAAK,CAACE,OAAO,CAAC;IAC7D;EACF;AACF,CAAC;AAED,eAAeJ,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}