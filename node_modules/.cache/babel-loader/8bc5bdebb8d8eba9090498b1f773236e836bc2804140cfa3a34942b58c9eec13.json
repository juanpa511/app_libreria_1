{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jp.maldonado\\\\Desktop\\\\Universidad\\\\Aplicaciones web\\\\app_libreria\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authService } from '../services/authService';\nimport { useAuth } from '../../hooks/useAuth';\n\n// Estado inicial\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  user: null,\n  token: null,\n  isAuthenticated: false,\n  loading: true,\n  error: null\n};\n\n// Tipos de acciones\nconst AUTH_ACTIONS = {\n  LOGIN_START: 'LOGIN_START',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_ERROR: 'LOGIN_ERROR',\n  LOGOUT: 'LOGOUT',\n  REGISTER_START: 'REGISTER_START',\n  REGISTER_SUCCESS: 'REGISTER_SUCCESS',\n  REGISTER_ERROR: 'REGISTER_ERROR',\n  LOAD_USER: 'LOAD_USER',\n  CLEAR_ERROR: 'CLEAR_ERROR'\n};\n\n// Reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.LOGIN_START:\n    case AUTH_ACTIONS.REGISTER_START:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n    case AUTH_ACTIONS.REGISTER_SUCCESS:\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        loading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGIN_ERROR:\n    case AUTH_ACTIONS.REGISTER_ERROR:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        error: action.payload\n      };\n    case AUTH_ACTIONS.LOGOUT:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.LOAD_USER:\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        loading: false\n      };\n    case AUTH_ACTIONS.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\n\n// Crear contexto\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Provider\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Cargar usuario al iniciar la aplicación\n  useEffect(() => {\n    const loadUser = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const userData = localStorage.getItem('user');\n        if (token && userData) {\n          const user = JSON.parse(userData);\n          dispatch({\n            type: AUTH_ACTIONS.LOAD_USER,\n            payload: {\n              user,\n              token\n            }\n          });\n        } else {\n          dispatch({\n            type: AUTH_ACTIONS.LOGOUT\n          });\n        }\n      } catch (error) {\n        console.error('Error al cargar usuario:', error);\n        dispatch({\n          type: AUTH_ACTIONS.LOGOUT\n        });\n      }\n    };\n    loadUser();\n  }, []);\n\n  // Función de login\n  const login = async (email, password) => {\n    try {\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_START\n      });\n      const response = await authService.login(email, password);\n      const {\n        user,\n        token\n      } = response.data;\n\n      // Guardar en localStorage\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: {\n          user,\n          token\n        }\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Error al iniciar sesión';\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_ERROR,\n        payload: errorMessage\n      });\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Función de registro\n  const register = async userData => {\n    try {\n      dispatch({\n        type: AUTH_ACTIONS.REGISTER_START\n      });\n      const response = await authService.register(userData);\n      const {\n        user,\n        token\n      } = response.data;\n\n      // Guardar en localStorage\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      dispatch({\n        type: AUTH_ACTIONS.REGISTER_SUCCESS,\n        payload: {\n          user,\n          token\n        }\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Error al registrarse';\n      dispatch({\n        type: AUTH_ACTIONS.REGISTER_ERROR,\n        payload: errorMessage\n      });\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Función de logout\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    dispatch({\n      type: AUTH_ACTIONS.LOGOUT\n    });\n  };\n\n  // Función para limpiar errores\n  const clearError = () => {\n    dispatch({\n      type: AUTH_ACTIONS.CLEAR_ERROR\n    });\n  };\n\n  // Función para verificar si el usuario tiene un rol específico\n  const hasRole = role => {\n    var _state$user;\n    return ((_state$user = state.user) === null || _state$user === void 0 ? void 0 : _state$user.role) === role;\n  };\n\n  // Función para verificar si el usuario es administrador\n  const isAdmin = () => {\n    return hasRole('admin');\n  };\n\n  // Función para verificar si el usuario es lector\n  const isReader = () => {\n    return hasRole('reader');\n  };\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    clearError,\n    hasRole,\n    isAdmin,\n    isReader\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authService","useAuth","jsxDEV","_jsxDEV","initialState","user","token","isAuthenticated","loading","error","AUTH_ACTIONS","LOGIN_START","LOGIN_SUCCESS","LOGIN_ERROR","LOGOUT","REGISTER_START","REGISTER_SUCCESS","REGISTER_ERROR","LOAD_USER","CLEAR_ERROR","authReducer","state","action","type","payload","AuthContext","AuthProvider","children","_s","dispatch","loadUser","localStorage","getItem","userData","JSON","parse","console","login","email","password","response","data","setItem","stringify","success","_error$response","_error$response$data","errorMessage","message","register","_error$response2","_error$response2$data","logout","removeItem","clearError","hasRole","role","_state$user","isAdmin","isReader","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jp.maldonado/Desktop/Universidad/Aplicaciones web/app_libreria/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport { authService } from '../services/authService';\r\nimport { useAuth } from '../../hooks/useAuth';\r\n\r\n// Estado inicial\r\nconst initialState = {\r\n  user: null,\r\n  token: null,\r\n  isAuthenticated: false,\r\n  loading: true,\r\n  error: null\r\n};\r\n\r\n// Tipos de acciones\r\nconst AUTH_ACTIONS = {\r\n  LOGIN_START: 'LOGIN_START',\r\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n  LOGIN_ERROR: 'LOGIN_ERROR',\r\n  LOGOUT: 'LOGOUT',\r\n  REGISTER_START: 'REGISTER_START',\r\n  REGISTER_SUCCESS: 'REGISTER_SUCCESS',\r\n  REGISTER_ERROR: 'REGISTER_ERROR',\r\n  LOAD_USER: 'LOAD_USER',\r\n  CLEAR_ERROR: 'CLEAR_ERROR'\r\n};\r\n\r\n// Reducer\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case AUTH_ACTIONS.LOGIN_START:\r\n    case AUTH_ACTIONS.REGISTER_START:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      };\r\n    \r\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\r\n    case AUTH_ACTIONS.REGISTER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    \r\n    case AUTH_ACTIONS.LOGIN_ERROR:\r\n    case AUTH_ACTIONS.REGISTER_ERROR:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n    \r\n    case AUTH_ACTIONS.LOGOUT:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    \r\n    case AUTH_ACTIONS.LOAD_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        isAuthenticated: true,\r\n        loading: false\r\n      };\r\n    \r\n    case AUTH_ACTIONS.CLEAR_ERROR:\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Crear contexto\r\nconst AuthContext = createContext();\r\n\r\n// Provider\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // Cargar usuario al iniciar la aplicación\r\n  useEffect(() => {\r\n    const loadUser = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const userData = localStorage.getItem('user');\r\n        \r\n        if (token && userData) {\r\n          const user = JSON.parse(userData);\r\n          dispatch({\r\n            type: AUTH_ACTIONS.LOAD_USER,\r\n            payload: { user, token }\r\n          });\r\n        } else {\r\n          dispatch({ type: AUTH_ACTIONS.LOGOUT });\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al cargar usuario:', error);\r\n        dispatch({ type: AUTH_ACTIONS.LOGOUT });\r\n      }\r\n    };\r\n\r\n    loadUser();\r\n  }, []);\r\n\r\n  // Función de login\r\n  const login = async (email, password) => {\r\n    try {\r\n      dispatch({ type: AUTH_ACTIONS.LOGIN_START });\r\n      \r\n      const response = await authService.login(email, password);\r\n      const { user, token } = response.data;\r\n      \r\n      // Guardar en localStorage\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      \r\n      dispatch({\r\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\r\n        payload: { user, token }\r\n      });\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.message || 'Error al iniciar sesión';\r\n      dispatch({\r\n        type: AUTH_ACTIONS.LOGIN_ERROR,\r\n        payload: errorMessage\r\n      });\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  // Función de registro\r\n  const register = async (userData) => {\r\n    try {\r\n      dispatch({ type: AUTH_ACTIONS.REGISTER_START });\r\n      \r\n      const response = await authService.register(userData);\r\n      const { user, token } = response.data;\r\n      \r\n      // Guardar en localStorage\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      \r\n      dispatch({\r\n        type: AUTH_ACTIONS.REGISTER_SUCCESS,\r\n        payload: { user, token }\r\n      });\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.message || 'Error al registrarse';\r\n      dispatch({\r\n        type: AUTH_ACTIONS.REGISTER_ERROR,\r\n        payload: errorMessage\r\n      });\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  // Función de logout\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    dispatch({ type: AUTH_ACTIONS.LOGOUT });\r\n  };\r\n\r\n  // Función para limpiar errores\r\n  const clearError = () => {\r\n    dispatch({ type: AUTH_ACTIONS.CLEAR_ERROR });\r\n  };\r\n\r\n  // Función para verificar si el usuario tiene un rol específico\r\n  const hasRole = (role) => {\r\n    return state.user?.role === role;\r\n  };\r\n\r\n  // Función para verificar si el usuario es administrador\r\n  const isAdmin = () => {\r\n    return hasRole('admin');\r\n  };\r\n\r\n  // Función para verificar si el usuario es lector\r\n  const isReader = () => {\r\n    return hasRole('reader');\r\n  };\r\n\r\n  const value = {\r\n    ...state,\r\n    login,\r\n    register,\r\n    logout,\r\n    clearError,\r\n    hasRole,\r\n    isAdmin,\r\n    isReader\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}